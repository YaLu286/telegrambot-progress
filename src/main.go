package main

import (
	"context"
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"os"
	"strings"
	"telegrambot/progress/admin"
	"telegrambot/progress/controllers"
	"telegrambot/progress/models"
)

var commandKeyboard = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("–°–ø–∏—Å–æ–∫"),
		tgbotapi.NewKeyboardButton("–ò–Ω—Ñ–æ"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("–§–∏–ª—å—Ç—Ä—ã"),
		tgbotapi.NewKeyboardButton("–ü–æ–º–æ—â—å"),
	),
)

var filtersSelectKeyboard = tgbotapi.NewInlineKeyboardMarkup(
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–°—Ç–∏–ª–∏", "styles"),
		tgbotapi.NewInlineKeyboardButtonData("–ü–∏–≤–æ–≤–∞—Ä–Ω–∏", "breweries"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–°–±—Ä–æ—Å–∏—Ç—å", "clear"),
	),
)

var styleSelectKeyboard = tgbotapi.NewInlineKeyboardMarkup(
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("APA", "APA"),
		tgbotapi.NewInlineKeyboardButtonData("Lager", "Lager"),
		tgbotapi.NewInlineKeyboardButtonData("Sour - Fruited", "Sour - Fruited"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("NE Pale Ale", "NE Pale Ale"),
		tgbotapi.NewInlineKeyboardButtonData("Gose", "Gose"),
		tgbotapi.NewInlineKeyboardButtonData("Sour - Fruited", "Sour - Fruited"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–ù–∞–∑–∞–¥", "back"),
	),
)

var brewerySelectKeyboard = tgbotapi.NewInlineKeyboardMarkup(
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("AFBrew", "AFBrew"),
		tgbotapi.NewInlineKeyboardButtonData("Zavod", "Zavod"),
		tgbotapi.NewInlineKeyboardButtonData("4Brewers", "4Brewers"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("Stamm Brewing", "Stamm Brewing"),
		tgbotapi.NewInlineKeyboardButtonData("Red Button", "Red Button"),
	),
	tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("–ù–∞–∑–∞–¥", "back"),
	),
)

func main() {
	bot, err := tgbotapi.NewBotAPI(os.Getenv("TELEGRAM_APITOKEN"))
	if err != nil {
		panic(err)
	}
	bot.Debug = true

	models.ConnectDatabase()

	controllers.ConnectRedis()

	updateConfig := tgbotapi.NewUpdate(0)

	updateConfig.Timeout = 30

	updates := bot.GetUpdatesChan(updateConfig)

	var admChan chan tgbotapi.Update = make(chan tgbotapi.Update)

	for update := range updates {

		ctx := context.Background()

		if update.Message != nil {

			UserID := update.Message.From.ID
			UserState := controllers.GetUserState(UserID)

			if UserState == "admin" {

				admChan <- update

			} else {

				msg := tgbotapi.NewMessage(UserID, "")

				msg.ReplyMarkup = commandKeyboard
				msg.ParseMode = "markdown"

				switch update.Message.Text {
				case "/start":

					photo := tgbotapi.NewPhoto(UserID, tgbotapi.FilePath("/Users/yalu/images/progress.jpg"))
					photo.ParseMode = "markdown"
					photo.Caption = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞ –°–æ–∫–æ–ª–µ*!\n–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –±—É—Ç—ã–ª–æ—á–Ω–æ–≥–æ –ø–∏–≤–∞/—Å–∏–¥—Ä–∞ –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –µ–≥–æ –ø–æ —Å–≤–æ–∏–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º\nüìû–¢–µ–ª–µ—Ñ–æ–Ω:+7(925)433-52-94\nüì©Email: progress.sokol@gmail.com"
					photo.ReplyMarkup = commandKeyboard
					bot.Send(photo)
					controllers.SetUserState(UserID, "start")

				case "–ò–Ω—Ñ–æ":

					photo := tgbotapi.NewPhoto(UserID, tgbotapi.FilePath("/Users/yalu/images/progress.jpg"))
					photo.ParseMode = "markdown"
					photo.Caption = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞ –°–æ–∫–æ–ª–µ*!\n–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –±—É—Ç—ã–ª–æ—á–Ω–æ–≥–æ –ø–∏–≤–∞ –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –µ–≥–æ –ø–æ —Å–≤–æ–∏–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º\n–¢–µ–ª–µ—Ñ–æ–Ω:+7(925)433-52-94\nEmail: progress.sokol@gmail.com"
					bot.Send(photo)

				case "–°–ø–∏—Å–æ–∫":

					controllers.DisplayBeerist(bot, update)

				case "–§–∏–ª—å—Ç—Ä—ã":

					controllers.RedisClient.HSet(ctx, fmt.Sprint(UserID), "state", "filters")
					msg.Text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã"
					msg.ReplyMarkup = filtersSelectKeyboard
					bot.Send(msg)

				case "–ü–æ–º–æ—â—å":

					msg.Text = "–ù–∞–∂–º–∏—Ç–µ *–°–ø–∏—Å–æ–∫* –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–∏–≤–∞/—Å–∏–¥—Ä–∞ –≤ –±—É—Ç—ã–ª–∫–∞—Ö.\n–ù–∞–∂–º–∏—Ç–µ *–§–∏–ª—å—Ç—Ä—ã* –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤\n–ù–∞–∂–º–∏—Ç–µ *–ò–Ω—Ñ–æ* –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π\n–ù–∞–∂–º–∏—Ç–µ *–ü–æ–º–æ—â—å*, —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ —É–≤–∏–¥–µ—Ç—å –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
					bot.Send(msg)

				case "/admin":
					if admin.Auth(UserID) {
						// admMode = true
						controllers.SetUserState(UserID, "admin")
						go admin.AdmPanel(bot, admChan)
					}
				}
			}

		} else if update.CallbackQuery != nil {

			UserID := update.CallbackQuery.From.ID
			UserState := controllers.GetUserState(UserID)

			if UserState == "admin" {

				admChan <- update

			} else {

				callback := tgbotapi.NewCallback(update.CallbackQuery.ID, "")

				if update.CallbackQuery.Message.Text == "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã" {
					re_msg := tgbotapi.NewEditMessageText(UserID, update.CallbackQuery.Message.MessageID, update.CallbackQuery.Message.Text)
					switch update.CallbackQuery.Data {
					case "styles":
						re_msg.Text = "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ —Å—Ç–∏–ª–∏"
						re_msg.ReplyMarkup = &styleSelectKeyboard
						bot.Send(re_msg)
					case "breweries":
						re_msg.Text = "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –ø–∏–≤–æ–≤–∞—Ä–Ω–∏"
						re_msg.ReplyMarkup = &brewerySelectKeyboard
						bot.Send(re_msg)
					case "clear":
						controllers.RedisClient.HDel(ctx, fmt.Sprint(UserID), "style")
						controllers.RedisClient.HDel(ctx, fmt.Sprint(UserID), "brewery")
						callback.Text = "–§–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã"
					}
				}

				if update.CallbackQuery.Message.Text == "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ —Å—Ç–∏–ª–∏" || update.CallbackQuery.Message.Text == "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –ø–∏–≤–æ–≤–∞—Ä–Ω–∏" {

					if update.CallbackQuery.Data == "back" {
						re_msg := tgbotapi.NewEditMessageText(UserID, update.CallbackQuery.Message.MessageID, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã")
						re_msg.ReplyMarkup = &filtersSelectKeyboard
						bot.Send(re_msg)
					} else {
						var category string
						switch update.CallbackQuery.Message.Text {
						case "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ —Å—Ç–∏–ª–∏":
							category = "style"
						case "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –ø–∏–≤–æ–≤–∞—Ä–Ω–∏":
							category = "brewery"
						}
						controllers.UpdateFilters(category, &update, &callback)
					}

				}

				if _, err := bot.Request(callback); err != nil {
					panic(err)
				}

			}
		}

	}

}
